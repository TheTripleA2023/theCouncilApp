'use client'

import {
  Button,
  Box,
  Flex,
  HStack,
  IconButton,
  useDisclosure,
  Stack,
  Spacer,

  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
  Text
} from '@chakra-ui/react'
import { HamburgerIcon, CloseIcon } from '@chakra-ui/icons'
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs'
import { useEffect, useState } from 'react'
import LogOutButton from './LogOutButton'
import LoginButton from '../misc/LoginButton'

interface Props {
  children: React.ReactNode
}

const Links = ['About', 'Usage Disclaimer']

const NavLink = (props: Props) => {
  const { children } = props

  const { isOpen: aboutIsOpen, onOpen: aboutOnOpen, onClose: aboutOnClose } = useDisclosure()
  const { isOpen: disclaimerIsOpen, onOpen: disclaimerOnOpen, onClose: disclaimerOnClose } = useDisclosure()


  return (
    <Box>
      <Box
        as="a"
        px={5}
        py={2}
        rounded={'md'}
        fontWeight={600}
        borderWidth={'2px'}
        borderColor={'RGBA(0,0,0,0)'}
        _hover={{
          textDecoration: 'none',
          borderColor: 'white',
          bg: 'gray.700',
        }}
        href={'#'}
        
        onClick={children === "Usage Disclaimer" ? disclaimerOnOpen : aboutOnOpen}>
        {children}
      </Box>

      {/* first modal */}
      <Box>
        <Modal isOpen={aboutIsOpen} onClose={aboutOnClose}>
          <ModalOverlay />
          <ModalContent 
            bg="#21234B">
            <ModalHeader
              fontSize="48px"
              fontWeight="700">
              {children}
            </ModalHeader>
            <ModalCloseButton />
            <ModalBody
              fontSize="20px"
              fontWeight="400"
              lineHeight="28px">
                <Text paddingBottom="20px">
                  The Council was born out of a hackathon project! It was a top 12 winning project at Hack the North 2023. 
                </Text>
                <Text paddingBottom="15px">
                  We’re a team of students from the University of British Columbia (please hire us we’re looking for jobs)
                </Text>
                <Text paddingBottom="15px">
                  Thanks for using the Council!
                </Text>
                <Text>
                  Alex, Adi, Alan, and Taryn
                </Text>
            </ModalBody>

            <ModalFooter>
              <Button colorScheme='blue' mr={3} onClick={aboutOnClose}>
                Close
              </Button>
            </ModalFooter>
          </ModalContent>
        </Modal>
      </Box>

      {/* second modal */}
      <Box>
        <Modal isOpen={disclaimerIsOpen} onClose={disclaimerOnClose}>
          <ModalOverlay />
          <ModalContent 
            bg="#21234B">
            <ModalHeader
              fontSize="48px"
              fontWeight="700">
              {children}
            </ModalHeader>
            <ModalCloseButton />
            <ModalBody
              fontSize="20px"
              fontWeight="400"
              lineHeight="28px">
                <Text>
                The Council’s content has been automatically generated by an AI and should be used for informational or leisure purposes only. We cannot guarantee the accuracy, completeness, or timeliness of the information provided. Any actions taken based on this content are at your own risk. We recommend seeking qualified expertise or conducting further research to validate and supplement the information provided.
                </Text>
            </ModalBody>

            <ModalFooter>
              <Button colorScheme='blue' mr={3} onClick={disclaimerOnClose}>
                Close
              </Button>
            </ModalFooter>
          </ModalContent>
        </Modal>
      </Box>



      
    </Box>
    // <Box
    //   as="a"
    //   px={5}
    //   py={2}
    //   rounded={'md'}
    //   fontWeight={600}
    //   borderWidth={'2px'}
    //   borderColor={'RGBA(0,0,0,0)'}
    //   _hover={{
    //     textDecoration: 'none',
    //     borderColor: 'white',
    //     bg: 'gray.700',
    //   }}
    //   href={'#'}>
    //   {children}
    // </Box>
  )
}




export default function Navbar() {
  const { isOpen, onOpen, onClose } = useDisclosure()
  const [session, setSession] = useState(null)
  const [loading, setLoading] = useState(false)
  const supabase = createClientComponentClient()

  useEffect(() => {
    const getSession = async () => {
      const { data: { session }} = await supabase.auth.getSession()
      setSession(session !== null)
      setLoading(true)
      
    }

    getSession()
  }, [supabase, setSession])

  return (
    <>
        <Flex   
        className='navbar'
        h={16} 
        alignItems={'center'} 
        justifyContent={'space-between'}
        minWidth='max-content'
        >
            <Box 
                marginLeft={[4, 12, 24, 48]}
                fontSize={['24px', '32px']}
                className='navbar-title'>
                the Council.
            </Box>
            <Spacer />
            <HStack as={'nav'} spacing={5}  marginRight={[4, 12, 24, 48]} display={{ base: 'none', md: 'flex' }}>
              {Links.map((link) => (
                  <NavLink key={link}>{link}</NavLink>
              ))}
              {!loading ? (
                null
              ) : (session ? 
                (
                  <LogOutButton>Log Out</LogOutButton>
                ) : (
                  <LoginButton text={"Get Started!"}/>
                )
              )}
            </HStack>
          <IconButton
            size={'lg'}
            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}
            aria-label={'Open Menu'}
            display={{ md: 'none' }}
            onClick={isOpen ? onClose : onOpen}
            color={'white'}
            marginRight={4}
          />
        </Flex>
        {isOpen ? (
          <Box pb={4} display={{ md: 'none' }}>
            <Stack as={'nav'} spacing={4} alignItems={'right'}>
                <NavLink key="About">About</NavLink>
                <NavLink key="Usage Disclaimer">Usage Disclaimer</NavLink>
              {!loading ? (
                null
              ) : (session ? (
                  <LogOutButton>Log Out</LogOutButton>
                ) : (
                  <LoginButton text={"Get Started!"}/>
                )
              )}
            </Stack>
          </Box>
        ) : null}
    </>
  )
}